set $mod Mod4
font pango:monospace 8, FontAwesome 8
floating_modifier $mod
bindsym $mod+Return exec urxvt

### borders style ###
new_window normal 0 px
new_float normal 0 px
for_window [class="^.*"] border pixel 0


### border color ###
client.background       #3f4551
client.focused          #708EA0 #668AA0 #85AEC6


### launcher dmenu ###
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop


bar 
{
	font pango:FontAwesome 8
	separator_symbol " "
	position top
	status_command i3status -c ~/.config/i3/i3status.conf

	colors 
	{
		background #2F333E
		statusline #708EA0
		separator #708EA0

		focused_workspace #000000 #3F4551 #ffffff
		inactive_workspace #333333 #222222 #888888
		urgent_workspace #aa0000 #990000 #ffffff
	}

}

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 5 px or 5 ppt
        bindsym k resize grow height 5 px or 5 ppt
        bindsym l resize shrink height 5 px or 5 ppt
        bindsym m resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"



### set workspace variable ###
set $workspace1   ""
set $workspace2   ""
set $workspace3   ""
set $workspace4   ""
set $workspace5   ""
set $workspace6   ""
set $workspace7   ""
set $workspace8   ""
set $workspace9   ""
set $workspace10   ""


### switch to workspace ###
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

### move focused container to workspace ###
bindsym Mod1+1 move container to workspace $workspace1
bindsym Mod1+2 move container to workspace $workspace2
bindsym Mod1+3 move container to workspace $workspace3
bindsym Mod1+4 move container to workspace $workspace4
bindsym Mod1+5 move container to workspace $workspace5
bindsym Mod1+6 move container to workspace $workspace6
bindsym Mod1+7 move container to workspace $workspace7
bindsym Mod1+8 move container to workspace $workspace8
bindsym Mod1+9 move container to workspace $workspace9
bindsym Mod1+0 move container to workspace $workspace10

### floating window ###
for_window [class="chromium"] enable border pixel 1
for_window [class="URxvt"] floating enable border pixel 4
for_window [class="Vlc"] floating enable border pixel 4
for_window [class="XTerm"] floating enable border pixel 4

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

bindsym $mod+space focus mode_toggle

bindsym $mod+F1 exec lxappearance

bindsym $mod+Shift+C reload
bindsym $mod+Shift+R restart

bindsym $mod+a focus parent
bindsym $mod+e layout toggle split
bindsym $mod+g exec subl
bindsym $mod+h split h
bindsym $mod+n exec nautilus
bindsym $mod+q kill
bindsym $mod+s layout stacking
bindsym $mod+v split v
bindsym $mod+w layout tabbed

bindsym $mod+shift+Left move left
bindsym $mod+shift+Down move down
bindsym $mod+shift+Up move up
bindsym $mod+shift+Right move right

bindsym $mod+shift+space floating toggle
bindsym $mod+f fullscreen


### out system ###

set $Locker /usr/local/share/lock
set $mode_system System:   L :  | S :  | P :  | R :  | E : 

mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym s exec --no-startup-id "$Locker; systemctl suspend", mode "default
    bindsym p exec --no-startup-id systemctl poweroff -i, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"

#   back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+x mode "$mode_system"


### volume ###
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle
#bindsym XF86AudioRaiseVolume exec amixer -q set Master 2dB+ unmute
#bindsym XF86AudioLowerVolume exec amixer -q set Master 2dB- unmute
#bindsym XF86AudioMute exec amixer -q set Master toggle


# Sreen brightness controls
bindsym XF86MonBrightnessUp exec light -A 5
bindsym XF86MonBrightnessDown exec light -U 5

# Touchpad controls
exec /bin/bash /usr/local/share/settouchpadsettings
bindsym XF86TouchpadToggle exec /bin/bash /usr/local/share/toggletouchpad


# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous


# Keyboard backlight
bindsym XF86KbdBrightnessUp exec /usr/local/bin/kb-light.py + 1
bindsym XF86KbdBrightnessDown exec /usr/local/bin/kb-light.py - 1
#bindsym XF86KbdBrightnessUp exec /bin/bash /usr/local/share/kbd_backlight up
#bindsym XF86KbdBrightnessDown exec /bin/bash /usr/local/share/kbd_backlight down

### autostart ###

#exec_always --no-startup-id compton --config ~/.config/compton/compton.conf -b
exec --no-startup-id feh --bg-scale /home/void/wallpaper.png
exec --no-startup-id mpd
#exec --no-startup-id albert
exec --no-startup-id dmenu --daemon
exec --no-startup-id xcompmgr -c -f -n 
exec --no-startup-id megasync
exec --no-startup-id keepassxc
exec --no-startup-id redshift
#exec --no-startup-id xautolock -time 1 -locker "exec $Locker"
exec --no-startup-id xautolock -time 15 -locker "systemctl suspend"
exec --no-startup-id /usr/lib/notification-daemon/notification-daemon
exec --no-startup-id unclutter
exec --no-startup-id nm-applet

#assign [class="Rhythmbox"] $w0

for_window [class="Eog"] floating enable
for_window [class="Lxappearance"] floating enable

### i3-gaps stuff ###

# Necessary for i3-gaps to work properly (pixel can be any value)
for_window [class="^.*"] border pixel 3

# Smart Gaps
smart_gaps on

# Smart Borders
smart_borders on

# Set inner/outer gaps
gaps inner 20
gaps outer 20

# Gaps mode
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
